<?xml version="1.0"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android" android:installLocation="auto" android:versionCode="-- %%INSERT_VERSION_CODE%% --" android:versionName="-- %%INSERT_VERSION_NAME%% --">
    <!-- %%INSERT_PERMISSIONS -->
    <!-- %%INSERT_FEATURES -->

    <!-- Mandatory foreground service declarations (for API 33 and above) -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK"/>
    <!-- Mandatory foreground service declarations (for API 33 and above) -->

    <!-- Display of notifications / foreground service notifications (for API 33 and above) -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    <!-- Display of notifications / foreground service notifications (for API 33 and above) -->

    <!-- Access Audio files (API 32 and below) -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <!-- Access Audio files (API 32 and below) -->
    <!-- Access Audio files (API 33 and above) -->
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO"/>
    <!-- Access Audio files (API 33 and above) -->

    <!-- [[1]] Needed for detecting when bluetooth connect/disconnect from something -->
    <!-- ALL BLUETOOTH PERMISSIONS https://developer.android.com/develop/connectivity/bluetooth/bt-permissions#declare-->
    <!-- API level 31 and above needs android.permission.BLUETOOTH_SCAN, and it is a runtime permissions meaning you must explicitly request user approval
         but the API Level 30 and below needs just to declare the android.permission.BLUETOOTH and android.permission.BLUETOOTH_ADMIN. -->
    <uses-permission android:name="android.permission.BLUETOOTH" android:maxSdkVersion="30"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" android:maxSdkVersion="30"/>
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT"/>

    <supports-screens android:anyDensity="true" android:largeScreens="true" android:normalScreens="true" android:smallScreens="true"/>
    <application android:name="org.qtproject.qt.android.bindings.QtApplication" android:hardwareAccelerated="true" android:label="Dinkplay" android:requestLegacyExternalStorage="true" android:allowBackup="true" android:fullBackupOnly="false" android:icon="@drawable/icon">
        <!--<receiver android:name="com.denkplay.states.DenkActivity" android:exported="true">
            <intent-filter>
                <action android:name="android.bluetooth.adapter.action.CONNECTION_STATE_CHANGED"/>
            </intent-filter>
        </receiver>-->
        <activity android:name="com.denkplay.states.DenkActivity"
            android:configChanges="orientation|uiMode|screenLayout|screenSize|smallestScreenSize|layoutDirection|locale|fontScale|keyboard|keyboardHidden|navigation|mcc|mnc|density"
            android:launchMode="singleInstance"
            android:screenOrientation="unspecified"
            android:exported="true"
            android:theme="@style/AppTheme"
            android:label="Dinkplay">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <meta-data android:name="android.app.lib_name" android:value="-- %%INSERT_APP_LIB_NAME%% --"/>
            <meta-data android:name="android.app.arguments" android:value="-- %%INSERT_APP_ARGUMENTS%% --"/>
            <!-- Splash screen -->
            <meta-data android:name="android.app.splash_screen_drawable" android:resource="@drawable/splash"/>
            <meta-data android:name="android.app.splash_screen_sticky" android:value="true"/>
            <!-- Splash screen -->
        </activity>

        <service android:name="com.denkplay.states.DenkService" android:enabled="true" android:exported="false" android:icon="@drawable/icon" android:label="denkplay" android:foregroundServiceType="mediaPlayback">
            <meta-data android:name="android.app.background_running" android:value="true"/>
        </service>

        <provider android:name="androidx.core.content.FileProvider" android:authorities="${applicationId}.qtprovider" android:exported="false" android:grantUriPermissions="true">
            <meta-data android:name="android.support.FILE_PROVIDER_PATHS" android:resource="@xml/qtprovider_paths"/>
        </provider>
    </application>
</manifest>
